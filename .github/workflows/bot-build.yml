name: bot build/publish

env:
  GO_VERSION: "^1.22.0"

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{env.GO_VERSION}}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.56.2
          working-directory: server
          skip-cache: true
          args: --timeout=5m

  test:
    runs-on: ubuntu-latest
    env:
      working-directory: .
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Go tests
        working-directory: ${{env.working-directory}}
        run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    env:
      working-directory: .
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Build
        working-directory: ${{env.working-directory}}
        run: make build

      - name: Store binaries
        uses: actions/upload-artifact@v3
        with:
          name: server-binaries
          path: ${{env.working-directory}}/bin
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    if: ${{ github.ref == 'refs/heads/main' }}
    env:
      working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download server binaries
        uses: actions/download-artifact@v3
        with:
          name: server-binaries
          path: ${{env.working-directory}}/server/bin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server
        uses: docker/build-push-action@v4
        with:
          file: ${{env.working-directory}}/discord-bot/Dockerfile
          context: ${{env.working-directory}}/server/bin
          push: true
          tags: warmans/tvgif:latest
